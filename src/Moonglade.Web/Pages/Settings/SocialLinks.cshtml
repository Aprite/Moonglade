@page "/admin/settings/social-links"
@Html.AntiForgeryToken()
@{
    var bc = BlogConfig.SocialLinkSettings;
    var settings = new SocialLinkSettingsJsonModel
            {
                IsEnabled = bc.IsEnabled,
                JsonData = bc.Links.ToJson(true)
            };
}

@section scripts {
    <script>
        const jsonValue = document.getElementById('settings_JsonData').value;
        let links = jsonValue ? JSON.parse(jsonValue) : [];
        let editIndex = null;

        function renderTable() {
            const tbody = document.getElementById('linksTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';
            links.forEach((link, index) => {
                const row = tbody.insertRow();
                row.insertCell(0).textContent = link.name;
                row.insertCell(1).textContent = link.icon;
                row.insertCell(2).textContent = link.url;
                const actions = row.insertCell(3);
                actions.innerHTML = `<button type="button" class="btn btn-sm btn-outline-accent" onclick="editLink(${index})">Edit</button>
                                     <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteLink(${index})">Delete</button>`;
            });
        }

        function addOrUpdateLink() {
            const name = document.getElementById('name').value.trim();
            const icon = document.getElementById('icon').value.trim();
            const url = document.getElementById('url').value.trim();
            const error = document.getElementById('error');

            if (!name || !icon || !url) {
                error.textContent = 'All fields are required!';
                return;
            }

            if (links.some((link, index) => link.name === name && index !== editIndex)) {
                error.textContent = 'Name must be unique!';
                return;
            }

            if (editIndex !== null) {
                links[editIndex] = { name: name, icon: icon, url: url };
                editIndex = null;
            } else {
                links.push({ name: name, icon: icon, url: url });
            }

            clearForm();
            renderTable();
        }

        function editLink(index) {
            const link = links[index];
            document.getElementById('name').value = link.name;
            document.getElementById('icon').value = link.icon;
            document.getElementById('url').value = link.url;
            editIndex = index;
        }

        function deleteLink(index) {
            links.splice(index, 1);
            renderTable();
        }

        function clearForm() {
            document.getElementById('name').value = '';
            document.getElementById('icon').value = '';
            document.getElementById('url').value = '';
            document.getElementById('error').textContent = '';
        }

        renderTable();
    </script>
    <script type="module">
        import * as settings from '/js/app/admin.settings.module.js';

        function handleSubmit(event) {
            assignEditorValues(jsonContentEditor, "#settings_JsonData");
            settings.handleSettingsSubmit(event);
        }

        const form = document.querySelector('#form-settings');
        form.addEventListener('submit', handleSubmit);
    </script>
}

@section head {
    <style>
        
    </style>
}

@section admintoolbar {
    <partial name="_SettingsHeader" />
}

<form id="form-settings" asp-controller="Settings" asp-action="SocialLink">
    <div class="admin-settings-entry-container">
        <div class="settings-entry row align-items-center py-3 px-2 rounded-3 shadow-sm border mb-2">
            <div class="col-auto">
                <i class="bi-menu-app settings-entry-icon"></i>
            </div>
            <div class="col">
                <label asp-for="@settings.IsEnabled" class="form-check-label"></label>
            </div>
            <div class="col-md-5 text-end">
                <div class="form-check form-switch form-control-lg">
                    <input type="hidden" name="IsEnabled" value="false">
                    <input type="checkbox" name="IsEnabled" value="true" class="form-check-input" @(@settings.IsEnabled
                                                                                                      ? "checked"
                                                                                                      : null)/>
                </div>
            </div>
        </div>
        
        <table id="linksTable" class="table table-bordered p-3 rounded-3 shadow-sm">
            <thead>
            <tr>
                <th>Name</th>
                <th>Icon</th>
                <th>URL</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        
        <div id="form">
            <label for="name">Name:</label>
            <input type="text" id="name" required>
            <label for="icon">Icon:</label>
            <input type="text" id="icon" required>
            <label for="url">URL:</label>
            <input type="text" id="url" required>

            <button class="btn btn-sm btn-outline-accent" onclick="addOrUpdateLink()">Add / Update</button>
            
            <span id="error" class="error"></span>
        </div>
    </div>

    <textarea asp-for="@settings.JsonData" class="settings-jsoncontent-textarea d-none"></textarea>

    <div class="admin-settings-action-container border-top pt-2 mt-2">
        <button type="submit" class="btn btn-outline-accent" id="btn-save-settings">
            @SharedLocalizer["Save"]
        </button>
    </div>
</form>